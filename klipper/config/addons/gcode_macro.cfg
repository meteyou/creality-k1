# K1
# CreateDate: 2023/03/21

[gcode_macro PRINTER_PARAM]
variable_z_safe_pause: 0.0
variable_z_safe_g28: 3.0
variable_max_x_position: 220.0
variable_max_y_position: 220.0
variable_max_z_position: 250.0
variable_fans: 3
variable_auto_g29: 0
variable_fan0_min: 25
variable_fan1_min: 50
variable_fan2_min: 180
variable_fan2_speed: 0
gcode:

[gcode_macro AUTOTUNE_SHAPERS]
variable_autotune_shapers: 'ei'
gcode:

[gcode_macro LOAD_MATERIAL_CLOSE_FAN2]
variable_fan2_value: 0
gcode:
  SAVE_GCODE_STATE NAME=myMoveState
  {% if printer['fan_generic sideblower'].speed > 0.0 %}
  SET_GCODE_VARIABLE MACRO=LOAD_MATERIAL_CLOSE_FAN2 VARIABLE=fan2_value VALUE={printer['fan_generic sideblower'].speed}
  M107 P2
  {% endif %}

[gcode_macro LOAD_MATERIAL_RESTORE_FAN2]
gcode:
  {% set fan2_value = printer['gcode_macro LOAD_MATERIAL_CLOSE_FAN2'].fan2_value|float %}
  RESTORE_GCODE_STATE NAME=myMoveState
  {% if fan2_value > 0.0 %}
  M106 P2 S{fan2_value}
  SET_GCODE_VARIABLE MACRO=LOAD_MATERIAL_CLOSE_FAN2 VARIABLE=fan2_value VALUE=0
  {% endif %}

[gcode_macro LOAD_MATERIAL]
gcode:
  LOAD_MATERIAL_CLOSE_FAN2
  M109 S{printer.custom_macro.default_extruder_temp}
  G91
  G1 E50 F300
  LOAD_MATERIAL_RESTORE_FAN2

[gcode_macro QUIT_MATERIAL]
gcode:
  SAVE_GCODE_STATE NAME=myMoveState
  M109 S{printer.custom_macro.default_extruder_temp}
  G91
  G1 E10 F300
  G1 E-30 F600
  G1 E-50 F2000
  RESTORE_GCODE_STATE NAME=myMoveState

[gcode_macro Qmode]
variable_flag: 0
variable_accel: 0
variable_accel_to_decel: 0
variable_velocity: 0
variable_square_corner_velocity: 0
variable_pressure_advance:0.0
variable_fan0_value: 0.00
variable_fan1_value: 0.00
variable_fan2_value: 0.00
variable_speed_factor: 0
gcode:
  {% set printer_state = printer.print_stats.state %}
  {% if printer['gcode_macro Qmode'].flag|int == 0 %}
  {% if printer_state == "printing" or printer_state == "paused" %}
  SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=accel VALUE={printer.toolhead.max_accel}
  SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=accel_to_decel VALUE={printer.toolhead.max_accel_to_decel}
  SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=velocity VALUE={printer.toolhead.max_velocity}
  SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=square_corner_velocity VALUE={printer.toolhead.square_corner_velocity}
  SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=pressure_advance VALUE={printer.extruder.pressure_advance}
  SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=speed_factor VALUE={printer.gcode_move.speed_factor}
  SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=fan0_value VALUE={printer['fan'].speed}
  SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=fan2_value VALUE={printer['fan_generic sideblower'].speed}
  SET_TMC_FIELD STEPPER=stepper_x FIELD=en_spreadcycle VALUE=0
  SET_TMC_FIELD STEPPER=stepper_y FIELD=en_spreadcycle VALUE=0

# Set Motion Parameters
  SET_VELOCITY_LIMIT ACCEL=5000
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=2500
  SET_VELOCITY_LIMIT VELOCITY=200
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=5
  SET_PRESSURE_ADVANCE ADVANCE=0.05
  M220 S50
  M106 P0 S80
  M106 P1 S0
  M106 P2 S0
  SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=flag VALUE=1
  {% endif %}
  {% endif %}

[gcode_macro Qmode_exit]
gcode:
  {% set printer_state = printer.print_stats.state %}
  {% if printer['gcode_macro Qmode'].flag|int == 1 %}
  {% if printer_state == "printing" or printer_state == "paused" %}
  SET_VELOCITY_LIMIT ACCEL={printer['gcode_macro Qmode'].accel}
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer['gcode_macro Qmode'].accel_to_decel}
  SET_VELOCITY_LIMIT VELOCITY={printer['gcode_macro Qmode'].velocity}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer['gcode_macro Qmode'].square_corner_velocity}
  SET_PRESSURE_ADVANCE ADVANCE={printer['gcode_macro Qmode'].pressure_advance}
  M220 S{printer['gcode_macro Qmode'].speed_factor * 100}
  M106 P0 S{(printer['gcode_macro Qmode'].fan0_value * 255 + 0.5)|int}
  M106 P1 S{(printer['gcode_macro Qmode'].fan1_value * 255 + 0.5)|int}
  M106 P2 S{(printer['gcode_macro Qmode'].fan2_value * 255 + 0.5)|int}
  SET_TMC_FIELD STEPPER=stepper_x FIELD=en_spreadcycle VALUE=1
  SET_TMC_FIELD STEPPER=stepper_y FIELD=en_spreadcycle VALUE=1
  SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=flag VALUE=0
  {% endif %}
  {% endif %}

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% if printer['gcode_macro Qmode'].flag|int == 0 %}
  {% set get_params = "" %}
  {% if 'S' in params|upper %}
  {% set get_params = (get_params + ' ' + 'S' + params.S) %}
  {% endif %}
  {% if 'P' in params|upper %}
  {% set get_params = (get_params + ' ' + 'P' + params.P) %}
  {% endif %}
  {% if 'T' in params|upper %}
  {% set get_params = (get_params + ' ' + 'T' + params.T) %}
  {% endif %}
  M204.1 {get_params}
  {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
  {% if 'E' in params %}
  SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
  {% else %}
  SET_PRESSURE_ADVANCE ADVANCE={params.K}
  {% endif %}
  {% endif %}

[delayed_gcode wait_temp]
# initial_duration: 2.
gcode:
  {% set cur_temp = printer.extruder.temperature %}
  {% if cur_temp|int < 40 %}
  {action_respond_info("end_temp!\n")}
  WAIT_TEMP_END
  {% else %}
  {action_respond_info("cur_temp = %s \n" % (cur_temp))}
  UPDATE_DELAYED_GCODE ID=wait_temp DURATION=5
  {% endif %}

[gcode_macro WAIT_TEMP_START]
gcode:
  UPDATE_DELAYED_GCODE ID=wait_temp DURATION=1
  M106 P0 S255
  M106 P2 S255

[gcode_macro WAIT_TEMP_END]
gcode:
  UPDATE_DELAYED_GCODE ID=wait_temp DURATION=0
  M106 P0 S0
  M106 P2 S0

[gcode_macro PRINT_CALIBRATION]
# This part of the command is replaced by the application side without passing parameters
gcode:
  CX_PRINT_LEVELING_CALIBRATION

[gcode_macro FIRST_FLOOR_PAUSE_POSITION]
gcode:
  {% set extruder_temp = printer.custom_macro.g28_ext_temp %}
  M104 S{extruder_temp}
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer['gcode_macro PRINTER_PARAM'].max_x_position|float + 1 %}
  G90
  G1 X{x_park} Y{y_park} Z2.0 F6000
  G1 Z0.2 F600

[gcode_macro START_PRINT]
gcode:
  WAIT_TEMP_END
  CLEAR_PAUSE
  {% set g28_extruder_temp = 140 %}
  {% set extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}
  {% set bed_temp = params.BED_TEMP|default(50)|float %}
  {% set chamber_temp = params.CHAMBER_TEMP|default(50)|float %}
  {% set leveling_calibration = printer.custom_macro.leveling_calibration|int %}

  # default settings
  M83   # relative extrusion
  G21   # set unit to mm

  # set speed & extrusion factor to 100%
  M220 S100
  M221 S100

  # set chamber temp
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET={chamber_temp}

  # preheat hotend to g28 temp
  M104 S{g28_extruder_temp}

  # preheat heater_bed to print temp
  M140 S{bed_temp}

  # wait for hotend & heater_bed temp
  M109 S{g28_extruder_temp}
  M190 S{bed_temp}

  # home printer
  M204 S500
  G28

  # nozzle clean
  NOZZLE_CLEAR HOT_MIN_TEMP={g28_extruder_temp} HOT_MAX_TEMP={g28_extruder_temp + 40} BED_MAX_TEMP={bed_temp}

  {% if leveling_calibration == 1 %}
    CHECK_BED_MESH AUTO_G29=1
    CX_CLEAN_CALIBRATION_FLAGS
  {% endif %}

  # preheat print temp
  M104 S{extruder_temp}
  M140 S{bed_temp}

  # wait for print temp
  M109 S{extruder_temp}
  M190 S{bed_temp}

  CX_PRINT_DRAW_ONE_LINE

[gcode_macro CX_PRINT_LEVELING_CALIBRATION]
description: Start Print function,three parameter:EXTRUDER_TEMP(180-300),BED_TEMP(30-100),CALIBRATION(0 or 1)
rename_existing: CX_PRINT_LEVELING_CALIBRATION_HARDCODED_BULLSHIT
gcode:
  # this is just a blind macro which is not needed anymore...

[gcode_macro CX_PRINT_DRAW_ONE_LINE]
description: Draw one line before printing
rename_existing: CX_PRINT_DRAW_ONE_LINE_HARDCODED_BULLSHIT
gcode:
  M83   # relative extrusion
  # goto start position
  G1 X0.1 Y20 Z2 F6000.0
  # draw line
  G1 X0.1 Y20 Z0.3 F6000.0
  G1 X0.1 Y180.0 Z0.3 F3000.0 E10.0
  G1 X0.4 Y180.0 Z0.3 F3000.0
  G1 X0.4 Y20.0 Z0.3 F3000.0 E10.0
  G1 Z2.0 F600.0
  G1 Z0.3 F600.0
  G1 Z2.0 F600.0
  # after the line
  M82         # absolute extrusion
  G92 E0      # reset extruder
  G1 F12000   # reset accel

[gcode_macro END_PRINT_POINT]
gcode:
  {% if "xyz" in printer.toolhead.homed_axes %}
  {% set max_z = printer["gcode_macro PRINTER_PARAM"].max_z_position|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set z_safe = 0.0 %}
  {% if act_z < (max_z / 2) %}
  {% set z_safe = (max_z / 2) - act_z %}
  {% elif act_z < max_z %}
  {% set z_safe = 2.0 %}
  {% endif %}
  G91
  G1 Z{z_safe} F1200
  G90
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  G1 X{x_park} Y{y_park} F6000
  {% else %}
  {action_respond_info("end print xyz_axes is NULL\n")}
  {% endif %}

[gcode_macro END_PRINT]
gcode:
# Qmode_exit
  M220 S100
  M204 S500
  TURN_OFF_HEATERS
  M107 P1
  END_PRINT_POINT
#WAIT_TEMP_START
  M107
  M84

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
##### set park positon for x and y #####
# default is your max posion from your printer.cfg
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
# save fan2 value and turn off fan2
  SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=fan2_speed VALUE={printer['fan_generic sideblower'].speed}
# {% set fspeed = printer['gcode_macro PRINTER_PARAM'].fan2_speed %}
# {action_respond_info("fan2_value1 = %s \n" % (fspeed))}
# SET_PIN PIN=fan2 VALUE=0
  M106 P2 S0
##### calculate save lift position #####
  {% set max_z = printer["gcode_macro PRINTER_PARAM"].max_z_position|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set z_safe = 0.0 %}
  {% if act_z < (max_z - 2.0) %}
  {% set z_safe = 2.0 %}
  {% elif act_z < max_z %}
  {% set z_safe = max_z - act_z %}
  {% endif %}
##### end of definitions #####
  SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=z_safe_pause VALUE={z_safe|float}
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
  G1 E-{E} F2100
  {% else %}
  {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
  G1 Z{z_safe} F600
  G90
  G1 X{x_park} Y{y_park} F6000
  {% else %}
  {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro INPUTSHAPER]
gcode:
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
  G90
  G28
  {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max/2 %}
  {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max/2 %}
  G1 X{POSITION_X} Y{POSITION_Y} Z5 F6000
  SHAPER_CALIBRATE
  CXSAVE_CONFIG
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[gcode_macro BEDPID]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=100
  SAVE_CONFIG

[gcode_macro TUNOFFINPUTSHAPER]
gcode:
  SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% if printer['gcode_macro PRINTER_PARAM'].fan2_speed > 0 %}
# {% set fspeed = printer['gcode_macro PRINTER_PARAM'].fan2_speed %}
# {action_respond_info("fan2_value2 = %s \n" % (fspeed))}
# SET_PIN PIN=fan2 VALUE={(printer['gcode_macro PRINTER_PARAM'].fan2_speed * 255 + 0.5)|int}
  {% set s_value = (printer['gcode_macro PRINTER_PARAM'].fan2_speed|float) %}
  M106 P2 S{s_value}
  {% endif %}
##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
  {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
  {%else %}
  {% set get_params = "" %}
  {% endif %}
##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
  G91
  G1 E{E} F2100
  {% else %}
  {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  END_PRINT
  CANCEL_PRINT_BASE

[gcode_macro G29]
gcode:
  {% if 'PROBE_COUNT' in params|upper %}
  {% set get_count = ('PROBE_COUNT' + params.PROBE_COUNT) %}
  {%else %}
  {% set get_count = "" %}
  {% endif %}

  {% set bed_temp = printer.custom_macro.default_bed_temp %}
  {% set extruder_temp = printer.custom_macro.g28_ext_temp %}
  {% set nozzle_clear_temp = printer.custom_macro.default_extruder_temp %}

  {% if 'BED_TEMP' in params|upper %}
  {% set bed_temp = params.BED_TEMP %}
  {% endif %}

  {% if 'EXTRUDER_TEMP' in params|upper %}
  {% set nozzle_clear_temp = params.EXTRUDER_TEMP %}
  {% endif %}

  G28
  BED_MESH_CLEAR
  NOZZLE_CLEAR HOT_MIN_TEMP={extruder_temp} HOT_MAX_TEMP={nozzle_clear_temp} BED_MAX_TEMP={bed_temp}
  M204 S5000
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=5000
  BED_MESH_CALIBRATE {get_count}
  BED_MESH_OUTPUT
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  G1 X{x_park} Y{y_park} F2000
  CXSAVE_CONFIG
  TURN_OFF_HEATERS
