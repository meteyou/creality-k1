{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to my Creality K1 guide","text":"<p>This guide will describe how to make the Creality K1 printer into a usable Klipper printer. The Creality K1 already uses a heavily modified Klipper version by default, which Creality has customized. Some of these changes are very strange and not very useful.</p>"},{"location":"#what-problems-has-the-printer","title":"What problems has the printer?","text":"<p>This printer has 1-2 massive hardware issues and furthermore the software is very messed up in my eyes. My personal main negative point is the restriction of user rights to access the printer settings.</p>"},{"location":"#why-am-i-doing-this-tutorial","title":"Why am I doing this tutorial?","text":"<p>When the first K1 were delivered and by the printer's behavior, it was immediately clear to me that Klipper is running in the background, which a Creality employee denied in an internal chat. Initially, I only wanted to demonstrate that Creality was using Klipper with disregard for the license. I could do this through a friend who owns the printer, and I made this public here. After that, I got the opportunity to test a K1 through nobufil and to test it deeply. Since I already did all the work to make the printer usable, I wanted to share this experience with the open-source community. I hope other users will continue to expand this guide via PRs.</p>"},{"location":"#who-am-i","title":"Who am I?","text":"<p>My name is Stefan Dej, aka meteyou, and I am the maintainer of Mainsail. Mainsail is a well-known web interface for the 3D printer firmware/software Klipper. I have worked with Klipper for several years and know the software well.</p>"},{"location":"links/","title":"Links","text":"<ul> <li>Creality Download Page </li> <li>Datasheets Stepper (GitHub xand3r40r93)</li> <li>extracted Firmware (GitHub xand3r40r93)</li> <li>K1 exploit K3B</li> <li>K3B Telegram Channel</li> <li>My Printables Mods Collection</li> </ul>"},{"location":"hardware/","title":"Hardware issues/fixes","text":"<p>The Creality K1 has a few real hardware problems that I will discuss here and explain in detail and suggest solutions. I have added all the printable fixes I used to a Printables collection. You can find it here.</p> <ul> <li>Filament path</li> <li>Extruder grip</li> <li>Door rattling</li> </ul>"},{"location":"hardware/door-rattling/","title":"Door rattling","text":"<p>The glass door of the Creality K1 is fitted at the top and bottom by a metal plate with a hole. However, this hinge doesn't fit perfectly in the vertical direction, and thus the door can rattle during faster movements. Furthermore, the door touches lightly over the display. The following mod is available for this. The door is lifted a small distance upwards and has no room to wobble.</p> <p> </p> Compare printed plated with original metal plate <p> </p> Installed new door plate from D3vil.Design <ul> <li>Download: Creality K1 door rattel fix by D3vil.Design on Printables</li> </ul>"},{"location":"hardware/extruder-grip/","title":"Extruder Grip","text":"<p>The Creality K1 I tested had massive problems with the grip of the extruder gears. On newer models, this problem may have already been fixed. I then came across this video:</p> <p>By default, the distance between the two filament gears is too large, and the filament has too little contact pressure. Due to the washer of one gear, they are no longer aligned, and the space between them for the filament is reduced. This results in a higher contact pressure of the gears on the filament.</p>"},{"location":"hardware/filament-path/","title":"Filament path","text":"<p>The filament path of the Creality K1 squeezes the filament, especially in the left-rear part of the print bed. Furthermore, this position can also lift/throw down the top panel. Two printable modifications solve this problem. I have decided to use the following mods.</p>"},{"location":"hardware/filament-path/#top-spacer-raiser","title":"Top Spacer / Raiser","text":"<p>With this mod, the top panel is raised by around 17.5mm. This allows the bowden incl. filament, to pass more freely and does not clamp the filament so firmly during specific movements.</p> <p> </p> Creality K1 top panel raiser by Christian K. <ul> <li>Download: Top Spacer / Raiser by Christian K on Printables</li> </ul>"},{"location":"hardware/filament-path/#cable-chain-bowden-clip","title":"Cable Chain Bowden Clip","text":"<p>The next step is removing the bowden from the cable chain and attaching it onto the cable chain with the clips. This way, the filament is not bent in the tight curves of the cable chain but can deform itself with more freedom. I used a cable tie at the very beginning of the cable chain to fix the bowden. This also facilitates the removal/addition of the top panel.</p> <p> </p> Cable Chain Bowden Clip by SHaDoW6 <ul> <li>Download: Cable Chain Bowden Clip by SHaDoW6 on Printables</li> </ul>"},{"location":"hardware/filament-path/#fix-cable-chain","title":"Fix Cable Chain","text":"<p>Three chain links are inserted reverse. You can see them in the following picture. These are used in the default setup to lead the Bowden out here. However, this causes a problem when you move the print head to the left and then to the back. These three chain links block because they are turned in the wrong direction.</p> <p> </p> The three reverse elements of the cable chain <p>These three links are easy to recognize because they are close to the front, compared to all other links that are close to the chain's back side. To fix the issue, you have to unhook these three links at the beginning and once at the end. Then you can turn them around and hook them back in. After that, the whole chain should look the same.</p> <p> </p> After the fix, the toolhead can reach the left-back corner without issues <p>I have seen this fix here in this YouTube short. In this video, he hangs these links out and puts one of them at the beginning of the chain, which I find is an unnecessary work. Just turning around and maybe take one out is quite enough.</p> <p>Thanks, Omran Al Sayed for this fix!</p>"},{"location":"hardware/filament-path/#replace-bowden-tube","title":"Replace Bowden Tube","text":"<p>I have also replaced the standard bowden tube with a reverse bowden tube. This has an inner diameter of 3mm; thus, the filament has more space in the bowden, and the extruder needs less force to pull the filament through the bowden. Furthermore, this change has a positive side effect. The bowden I use is completely transparent, so it's easier to see the current position of the filament and which filament is inserted without having to look at the back of the printer.</p> <p> </p> Reverse bowden tube with ID:3mm from Aliexpress <ul> <li>Aliexpress: 1m 3x4mm</li> <li>Aliexpress: 50m 3x4mm</li> </ul>"},{"location":"slicer/","title":"Slicer","text":"<p>Creality offers its slicer for the K1 with ready-to-use profiles. This slicer looks like a Cura fork. Even after these adjustments to this guide, it should still be usable. Since I prefer Prusaslicer (or Orcaslicer) instead of a Cura, I adapted the default profile from the Creality slicer to my needs.</p>"},{"location":"slicer/prusaslicer/","title":"Prusaslicer","text":"<p>Here I explain how to set up PrusaSlicer to be able to slice Gcodes for the Creality K1. Furthermore, you will find a config bundle at the end, which you can import into PrusaSlicer.</p>"},{"location":"slicer/prusaslicer/#printer-settings","title":"Printer settings","text":"<p>Important are the following Settings:</p> <ul> <li>G-code flavor: Klipper</li> <li>G-code thumbnails: 96x96, 32x32, 300x300</li> <li>Format of G-code thumbnails: PNG</li> <li>Use relative E distances: unchecked</li> </ul> <p> </p> PrusaSlicer &gt; Printer Settings &gt; General"},{"location":"slicer/prusaslicer/#custom-g-codes","title":"Custom G-codes","text":"<p>Start G-code:</p> <pre><code>M82 ;absolute extrusion mode\nM140 S0\nM104 S0 \nSET_PRINT_STATS_INFO TOTAL_LAYER=[total_layer_count]\nSTART_PRINT EXTRUDER_TEMP={first_layer_temperature[0]} BED_TEMP=[first_layer_bed_temperature]\n</code></pre> <p>End G-code:</p> <pre><code>END_PRINT\n; total layers count = [total_layer_count]\n</code></pre> <p>Before layer change G-Code:</p> <pre><code>;BEFORE_LAYER_CHANGE\n;[layer_z]\n</code></pre> <p>After layer change G-code:</p> <pre><code>;AFTER_LAYER_CHANGE\n;[layer_z]\nSET_PRINT_STATS_INFO CURRENT_LAYER={layer_num + 1}\n</code></pre>"},{"location":"slicer/prusaslicer/#physical-printer","title":"Physical Printer","text":"<p>Please use the Host Type <code>Klipper (via Moonraker)</code>, type in your IP address and add the port <code>7125</code> with a <code>:</code> for Moonraker after the IP, like in the screenshot below:</p> <p> </p> PrusaSlicer &gt; Physical Printer"},{"location":"slicer/prusaslicer/#profiles","title":"Profiles","text":"<p>Here you can find a full Printer Config Bundle for the Creality K1 with 0.2mm Layer-Height and nobufil ABSx Filament:</p> <ul> <li>Download Config Bundle</li> </ul>"},{"location":"software/","title":"Software issues/fixes","text":"<p>The Creality K1 is running a klipper fork from December 2022 (according to git history, it was updated one or two times after that). This has some modifications to support the hardware of this printer. For example, the main MCU is not supported by Klipper by default. Furthermore, loadcells are used in the heating bed for homing/leveling. These are currently not supported by Klipper either. Furthermore, Creality uses its own web interface (which has a very low functionality) with its own API.</p>"},{"location":"software/#what-will-we-do","title":"What will we do?","text":"<p>First, we need to set up root access. We can do this through a hack from the YouTuber K3D // Dimitry Sorkin. After that, we reset Moonraker and update it. Then we enable the Moonraker service. Moonraker is disabled by default. After the activation of the API, we can install the web interface. In my case, the choice is Mainsail. Here I have provided a customized version to support then Creality K1 best possible. Once the system is set up, we can start with the Klipper config. Here I have prepared a clean config. But we still have to turn off a function of the Creality OS. Otherwise, the Klipper config will be overwritten after each reboot.</p>"},{"location":"software/klipper/","title":"Klipper","text":"<p>First, we need to replace the service file because it overwrites the config at every klipper start. This is intended for an update process but is annoying if you want to make adjustments yourself. Furthermore, I have reworked the Klipper config to be more straightforward and to use all fans as Klipper intended. Creality has set up all fans in the standard config slightly strange (in my opinion). Furthermore, I found a typo in a Klipper file modified by Creality. We are also changing this.</p>"},{"location":"software/klipper/#update-klipper-service","title":"Update Klipper service","text":"<p>I only turned off the \"copy_config\" function in the start function of the service.</p> <pre><code>cd /etc/init.d\nrm S55klipper_service\nwget -q -O S55klipper_service https://github.com/meteyou/creality-k1/raw/main/klipper/S55klipper_service\nchmod +x S55klipper_service\n</code></pre>"},{"location":"software/klipper/#fix-bug-in-klipper-error-report","title":"Fix bug in Klipper error report","text":"<p>Creality forgot a <code>\"</code> in the JSON error output. So this output is not a valid JSON string. It would only be a wrong output message but have no issues with printing.</p> <pre><code># update gcode.py\ncd /usr/share/klipper/klippy\nrm gcode.py\nwget -q -O gcode.py https://github.com/meteyou/creality-k1/raw/main/klipper/klippy/gcode.py\n\n# update fan_feedback.py\ncd /usr/share/klipper/klippy/extras\nrm fan_feedback.py\nwget -q -O fan_feedback.py https://github.com/meteyou/creality-k1/raw/main/klipper/klippy/fan_feedback.py\n\n# restart klipper\n/etc/init.d/S55klipper_service restart\n</code></pre>"},{"location":"software/klipper/#change-printercfg","title":"Change printer.cfg","text":"<p>I have adjusted the following settings in the Klipper config: - split config in multiple files - change all fans from output_pin to there real usage (heater_fan, fan, temperature_fan, ...) - change all macros to the new fans - optimize stepper driver settings</p> <p>To remove the old config and download the new config, execute following lines:</p> <pre><code>cd /usr/data/printer_data/config\nrm *.cfg\nwget -q -O printer.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/printer.cfg\nmkdir addons\ncd addons\nwget -q -O adxl.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/adxl.cfg\nwget -q -O bed_leveling.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/bed_leveling.cfg\nwget -q -O chamber.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/chamber.cfg\nwget -q -O extruder.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/extruder.cfg\nwget -q -O fans.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/fans.cfg\nwget -q -O gcode_macro.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/gcode_macro.cfg\nwget -q -O heater_bed.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/heater_bed.cfg\nwget -q -O led.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/led.cfg\nwget -q -O mcu.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/mcu.cfg\nwget -q -O printer_params.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/printer_params.cfg\nwget -q -O sensorless.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/sensorless.cfg\nwget -q -O stepper.cfg https://github.com/meteyou/creality-k1/raw/main/klipper/config/addons/stepper.cfg\n</code></pre>"},{"location":"software/mainsail/","title":"Mainsail","text":"<p>We need to download the static files from Mainsail, enable NGINX service on the K1, and modify the path to the static files. This is done in a few steps.</p>"},{"location":"software/mainsail/#download-static-files","title":"Download static files","text":"<p>I have provided a customized Mainsail version for the K1. We download it from this repo and unzip it.</p> <pre><code>mkdir /usr/share/mainsail\ncd /usr/share/mainsail\nwget -q -O mainsail.zip https://github.com/meteyou/creality-k1/raw/main/mainsail/mainsail.zip &amp;&amp; unzip mainsail.zip &amp;&amp; rm mainsail.zip\n</code></pre>"},{"location":"software/mainsail/#enable-nginx-and-modify-path","title":"Enable NGINX and modify path","text":"<p>Change <code>nginx.conf</code>:</p> <pre><code>cd /etc/nginx\nmv nginx.conf nginx.conf.bak\nwget -q -O nginx.conf https://github.com/meteyou/creality-k1/raw/main/mainsail/nginx.conf\n</code></pre> <p>Activate and modify NGINX service file:</p> <pre><code>cd /etc/init.d\nrm S50nginx\nwget -q -O S50nginx https://github.com/meteyou/creality-k1/raw/main/mainsail/S50nginx\nchmod 775 S50nginx\n</code></pre> <p>And now you can start NGINX with: <code>/etc/init.d/S50nginx restart</code></p> <p>After a successful restart, you can open your browser with the address <code>http://&lt;ip&gt;:81</code> and you should see Mainsail:</p> <p> </p> Mainsail dashboard"},{"location":"software/moonraker/","title":"Moonraker","text":"<p>Moonraker is already installed by default, but unfortunately an outdated version and not activated.</p>"},{"location":"software/moonraker/#clone-default-moonraker","title":"Clone default Moonraker","text":"<p>First we download the default Moonraker files and install the dependencies.</p> <pre><code>cd /usr/share\ngit clone https://github.com/Arksine/moonraker.git moonraker-org\n./moonraker-env/bin/pip install -r ./moonraker-org/scripts/moonraker-requirements.txt\n</code></pre>"},{"location":"software/moonraker/#download-default-settings","title":"Download default settings","text":"<p>As a second step, we download the default settings:</p> <pre><code>cd /usr/data/printer_data/config/\nwget https://raw.githubusercontent.com/meteyou/creality-k1/main/moonraker-config/moonraker.conf\n</code></pre>"},{"location":"software/moonraker/#activate-service","title":"Activate service","text":"<p>The last step is to activate the service. Here we download a ready to use service file and replace the standard file:</p> <pre><code>cd /etc/init.d/\nrm S56moonraker_service\nwget https://raw.githubusercontent.com/meteyou/creality-k1/main/moonraker-config/S56moonraker_service\nchmod 755 S56moonraker_service\n</code></pre> <p>After this change we can restart the printer and check if Moonraker is available. To restart the printer, execute the following command:</p> <pre><code>reboot\n</code></pre> <p>If the printer has started successfully, open a browser window and open the address <code>http://&lt;ip&gt;:7125</code>. A page like this should be displayed:</p> <p> </p> Moonraker dashboard"},{"location":"software/root-access/","title":"Root access","text":"<p>K3B has released a tool to unlock root access. Furthermore, with this tool, you can also downgrade the version of the printer. This may be necessary if your printer is above version 1.2.9.15. After this version, Creality tried removing the possibility of using the printer correctly.</p> <p>Here you can find the original video of K3B: link to YouTube</p>"},{"location":"software/root-access/#execute-exploit","title":"Execute exploit","text":"<p>Download this file:</p> <ul> <li>original telegram post</li> <li>mirror on this GitHub repo</li> </ul> <p>Open the html file and put your IP address into the input line. Then you can click <code>Method A</code>. If your printer has a newer version than 1.2.9.15, please use the downgrade function.</p>"},{"location":"software/root-access/#test-ssh-connection","title":"Test SSH connection","text":"<p>Open your SSH client of choice and try to connect with the user <code>root</code> and the password <code>creality</code>.</p>"}]}